/////////////////////////
// USAGE               //
/////////////////////////
/*! \page usage_page Usage 

\tableofcontents

\section genusage_sec General Notes

\subsection Tensor flags

Generating and using tensors is often done using flags to select which
tensors you want. See Flags.h for the list of flags and what they do.

The flags are used in typical C fashion with the bitwise OR operation. For
example,

\code{.cpp}
dft.GenQTensors(QGEN_QMO | QGEN_QOV, QSTORAGE_ONDISK);
\endcode

will generate both Qmo and Qov tensors.



\subsection tendim_sec Tensor Dimensions

This documentation uses the following definitions:

 | Term    | Description                                                             |
 |---------|-------------------------------------------------------------------------|
 | nso     | Number of \b primary basis functions (spherical or cartesian)           |
 | naux    | Number of \b auxiliary basis functions                                  |
 | nmo     | Number of molecular orbitals                                            |
 | nocc    | Number of occupied molecular orbitals                                   |
 | nvir    | Number of virtual molecular orbitals                                    |
 | q       | An auxiliary index                                                      |
 | i, j    | Generic orbital indices                                                 |
 | ij      | Combined orbital index (if packed, i*(i+1)/2+j, else i*ndim2 + j        |

The total size of a 3-index "Q" tensor is the number of auxiliary indices times
the number of combined orbital indices ("ij"). 

The number of combined orbital indices depends on the type of tensor
(ie mo vs. occupied-occupied, etc) and the packing. The following table
shows the number of combined orbital indices for a given tensor (which
can be queried by DFTensor::QBatchSize)

 | Tensor | Packed Size      | Unpacked Size |
 |--------|------------------|---------------|
 | Qso    | nso*(nso+1)/2    | nso*nso       |
 | Qmo    | nmo*(nmo+1)/2    | nmo*nmo       |
 | Qoo    | nocc*(nocc+1)/2  | nocc*nocc     |
 | Qov    |                  | nocc*nvir     |
 | Qvv    | nvir*(nvir+1)/2  | nvir*nvir     |



\subsection byq_sec Storage Order

The 3-index tensors generated by DFTensor::GenQTensors() (or panache_genqtensors())
can be stored (and retrieved) either "by Q" or "by IJ". The default is by IJ, which
means the combined orbital index is the first (slowest) index. Storing and retrieving
"by Q" means that the auxiliary basis function index is the first (slowest) index.

\image html byqfig.png

A 'batch' returned from DFTensor::GetBatch() or panache_getbatch()
corresponds to a row for the "by IJ" diagram, while one returned from
DFTensor::GetQBatch() or panache_getqbatch() corresponds to a row for the
"by Q" diagram.



\subsection frozen Frozen orbitals

PANACHE supports frozen occupied orbitals. These are set with 
panache::ThreeIndexTensor::SetNOcc(), panache_setnocc(), or \link panachef_setnocc_() panachef_setnocc()\endlink.
In this case, orbital counting for Qmo, Qoo, and Qov start
at the first non-frozen orbital.


\section usage_interfaces Interfaces

Panache has interfaces for Fortran, C, and C++. See the following
separate pages for more detailed information on their usage

   - \ref usage_c_sec

   - \ref usage_fortran_sec

   - \ref usage_cpp_sec

*/
