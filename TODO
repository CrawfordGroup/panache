---------------
Bugs
---------------
None known



---------------------------
Enhancements/Optimizations
---------------------------
- In density fitting, the transformation with C matrices
  can be done before the contraction with the metric. In doing
  so, the contraction with the metric is much faster, in particular
  with the OO and OV blocks.

  This, however, comes at the expense of disk IO when storing to disk.
  There would be a great speedup in memory, however, particuarly for OO blocks.

  This will require the GenDFQso functions to be replaced, more or less, and to
  take a vector of C matrices like the transformation function does.

  Outline:
    Loop over q
      Generate all ij for a particular shell index q
      Transform with necessary C matrices
      Write (to mem/disk)

    Read tensor
    Contract with J
    Write tensor again

  ** One possible way to do it - Derive from MemoryQTensor, and 
     make GenDFQTensor a dummy function. Then, actually generate and
     transform in one shot in the Transform_() function. This would also
     need a new flag.

     Problem: FittingMetric may not exist then. Then again, it's a shared_ptr
              right now...


- Calling GetBatch/GetQBatch/CalcIndex from within a loop requires resolving the
  tensorflag, followed by a vtable lookup to dereference the StoredQTensor object.
  Both of these are probably unwanted when called from within nested loops.

  One possible solution, at least for C++, is to provide a function that returns
  a pointer to the GetBatch/GetQBatch function from that specific class. This avoids
  at least the resolution of the tensorflag, and maybe also the vtable lookup (?)

- SharedPtr objects in some cases can be removed, although the increase in efficiency is probably
  minimal. One place would be the TwoBodyAOInt class, which should assume that the
  BasisSet objects will exist for the lifetime of the TwoBodyAOInt object.

- Implement output to a file option (mostly for C/Fortran interfaces)
  (pass in file path, and just open file in append mode)
